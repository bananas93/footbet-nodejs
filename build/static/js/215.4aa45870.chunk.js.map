{"version":3,"file":"static/js/215.4aa45870.chunk.js","mappings":"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","sources":["api/auth.js","webpack://client/./src/components/Card/index.module.scss?78fc","components/Card/index.js","webpack://client/./src/views/ProfilePage/index.module.scss?1ada","views/ProfilePage/index.js"],"sourcesContent":["import axios from 'axios';\nimport { getJWToken } from '../helpers/authHelper';\n\nexport const login = async ({ email, password }) => await axios.post(`${process.env.REACT_APP_LOCAL_API}/users/login`, { email, password });\n\nexport const register = async ({ email, name, password }) => axios({\n  method: 'post',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  url: `${process.env.REACT_APP_LOCAL_API}/users/register`,\n  data: { email, name, password },\n});\n\nexport const getUserDetails = async () => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/users/me`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n\nexport const updateUserDetails = async ({ email, name, password }) => {\n  const token = getJWToken();\n  return await axios({\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token,\n    },\n    url: `${process.env.REACT_APP_LOCAL_API}/users/me`,\n    data: { email, name, password },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__4-jbm\",\"cardTitle\":\"Card_cardTitle__d6oQG\",\"cardBody\":\"Card_cardBody__AWMIx\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__KoSil\",\"cardMatchDate\":\"Card_cardMatchDate__ruzTr\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\nconst Card = ({ title, action, children }) => (\n  <div className={styles.card}>\n    {title && (\n      <div className={styles.cardTitle}>\n        <span>{title}</span>\n        {action && (\n          <div className={styles.cardAction}>{action}</div>\n        )}\n      </div>\n    )}\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\n      {children}\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  action: PropTypes.node,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"ProfilePage_row__AOVs+\",\"col\":\"ProfilePage_col__A-AXo\",\"exit\":\"ProfilePage_exit__lEuV1\"};","import {\n  Input, Form, Button, Divider,\n} from 'antd';\nimport { useContext, useEffect } from 'react';\nimport { getUserDetails, updateUserDetails } from '../../api/auth';\nimport { TitleContext } from '../../utils/contexts';\nimport styles from './index.module.scss';\nimport Card from '../../components/Card';\nimport { notificationWrapper } from '../../helpers/notification';\nimport { logout } from '../../helpers/authHelper';\n\nfunction ProfilePage() {\n  const { setTitle } = useContext(TitleContext);\n  useEffect(() => {\n    setTitle('Профіль');\n  }, [setTitle]);\n\n  const [form] = Form.useForm();\n  useEffect(() => {\n    const loadUserData = async () => {\n      try {\n        const res = await getUserDetails();\n        if (res.status && res.status === 200) {\n          form.setFieldsValue({\n            name: res.data.name,\n            email: res.data.email,\n          });\n        }\n      } catch (error) {\n        notificationWrapper(true, error.message);\n      }\n    };\n    loadUserData();\n  }, []);\n\n  const changeProfile = async (values) => {\n    if (values.password !== values.password2) {\n      notificationWrapper(true, 'Пароль не співпадають');\n      return;\n    }\n    try {\n      const res = await updateUserDetails(values);\n      if (res.status && res.status === 201) {\n        form.setFieldsValue({\n          name: res.data.name,\n          email: res.data.email,\n        });\n        notificationWrapper(false, 'Профіль успішно оновлено');\n      }\n    } catch (error) {\n      notificationWrapper(true, error.message);\n    }\n  };\n  const onFinish = (values) => {\n    changeProfile(values);\n  };\n\n  return (\n    <div className={styles.row}>\n      <div className={styles.col}>\n        <Card\n          title=\"Оновити профіль\"\n          action={\n            <button className={styles.exit} type=\"button\" onClick={logout}>Вийти</button>\n          }\n        >\n          <Form\n            form={form}\n            className=\"sign-in-form\"\n            onFinish={onFinish}\n            layout=\"vertical\"\n            name=\"signin-form\"\n            requiredMark={false}\n            colon={false}\n            autoComplete=\"chrome-off\"\n          >\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[{ required: true, message: 'Введіть ваш email' }]}\n            >\n              <Input readOnly />\n            </Form.Item>\n            <Form.Item\n              label=\"Ім'я\"\n              name=\"name\"\n              rules={[{ required: true, message: 'Введіть ваше ім\\'я' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Divider />\n            <Form.Item\n              label=\"Новий пароль\"\n              name=\"password\"\n              hasFeedback\n              rules={[{ message: 'Введіть ваш новий пароль' }]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item\n              label=\"Підтвердіть новий пароль\"\n              name=\"password2\"\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                { message: 'Підтвердіть ваш новий пароль' },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Змінити\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n"],"names":["login","email","password","axios","process","register","name","method","headers","url","data","getUserDetails","token","getJWToken","Authorization","updateUserDetails","title","action","children","className","styles","cn","setTitle","useContext","TitleContext","useEffect","Form","form","loadUserData","res","status","setFieldsValue","notificationWrapper","message","changeProfile","values","password2","Card","type","onClick","logout","onFinish","layout","requiredMark","colon","autoComplete","label","rules","required","readOnly","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","htmlType"],"sourceRoot":""}