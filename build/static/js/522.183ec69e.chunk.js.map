{"version":3,"file":"static/js/522.183ec69e.chunk.js","mappings":"0NAGaA,EAAc,mCAAG,2FACtBC,GAAQC,EAAAA,EAAAA,MADc,SAEfC,IAAAA,IAAA,UAAaC,4BAAb,gBAA4D,CACvEC,QAAS,CACPC,cAAeL,KAJS,mFAAH,qDASdM,EAAa,mCAAG,WAAOC,GAAP,8EACrBP,GAAQC,EAAAA,EAAAA,MADa,SAEdC,IAAAA,IAAA,UAAaC,4BAAb,wBAA4DI,GAAM,CAC7EH,QAAS,CACPC,cAAeL,KAJQ,mFAAH,uD,sFCX1B,EAAuB,mBAAvB,EAAsD,wBAAtD,EAAyF,uBAAzF,EAAuI,mCAAvI,EAAuL,yB,SC6BvL,EA1Ba,SAAC,GAAD,IACXQ,EADW,EACXA,MAAOC,EADI,EACJA,OAAQC,EADJ,EACIA,MAAOC,EADX,EACWA,WAAYC,EADvB,EACuBA,SADvB,OAGX,iBAAKC,UAAWC,EAAaJ,MAAOA,EAApC,UACGF,IACC,iBAAKK,UAAWC,EAAkBJ,MAAOC,EAAzC,WACE,0BAAOH,IACNC,IACC,gBAAKI,UAAWC,EAAhB,SAAoCL,QAI1C,gBAAKI,UAAWE,GAAAA,CAAGD,GAAD,UAAqBA,GAA+BN,IAAtE,SACGI,S,8JChBP,EAAsB,6BAAtB,EAA8D,kCAA9D,EAAsG,6BAAtG,EAA6I,iC,6BCoE7I,EA5DwB,WACtB,IAAQI,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IAAxBF,UACRG,EAAAA,EAAAA,YAAU,WACRH,EAAS,gDACR,CAACA,IACJ,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAL,EAAAA,EAAAA,YAAU,WACR,IAAMM,EAAe,mCAAG,2FACtBD,GAAW,GADW,mBAGFzB,EAAAA,EAAAA,KAHE,QAGd2B,EAHc,QAIZC,QAAyB,MAAfD,EAAIC,QACpBL,EAAeI,EAAIE,MALD,gDAQpBC,EAAAA,GAAAA,MAAY,KAAMC,SAASF,KAAKG,OAAS,KAAMC,QAAS,KARpC,yBAUpBR,GAAW,GAVS,4EAAH,qDAarBC,MACC,IAECF,GACK,SAACU,EAAA,EAAD,KAIP,iCACE,gBAAKpB,UAAWC,EAAhB,SACGO,EAAYa,QAAO,qBAAGC,WAAwBC,KAAI,SAACC,GAAD,OACjD,gBAAyBxB,UAAWC,EAApC,UACE,SAACwB,EAAA,EAAD,WACE,UAAC,KAAD,CAAMC,GAAE,sBAAiBF,EAAW9B,GAA5B,YAAkC8B,EAAWG,MAArD,WACE,gBAAK3B,UAAWC,EAAhB,SAAiCuB,EAAWI,QAC5C,gBAAK/B,MAAO,CAAEgC,UAAW,UAAWC,MAAO,OAAQC,OAAQ,SAAWC,IAAKR,EAAWI,KAAMK,IAAKT,EAAWU,aAJxGV,EAAW9B,UAUzB,gBAAKM,UAAWC,EAAhB,oGACA,gBAAKD,UAAWC,EAAhB,SACGO,EAAYa,QAAO,qBAAGC,WAAuBC,KAAI,SAACC,GAAD,OAChD,gBAAyBxB,UAAWC,EAApC,UACE,SAACwB,EAAA,EAAD,WACE,UAAC,KAAD,CAAMC,GAAE,sBAAiBF,EAAW9B,GAA5B,YAAkC8B,EAAWG,MAArD,WACE,gBAAK3B,UAAWC,EAAhB,SAAiCuB,EAAWI,QAC5C,gBAAK/B,MAAO,CAAEgC,UAAW,UAAWC,MAAO,OAAQC,OAAQ,SAAWC,IAAKR,EAAWI,KAAMK,IAAKT,EAAWU,aAJxGV,EAAW9B","sources":["api/tournaments.js","webpack://client/./src/components/Card/index.module.scss?78fc","components/Card/index.js","webpack://client/./src/views/TournamentsPage/index.module.scss?c786","views/TournamentsPage/index.js"],"sourcesContent":["import axios from 'axios';\nimport { getJWToken } from '../helpers/authHelper';\n\nexport const getTournaments = async () => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n\nexport const getTournament = async (id) => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments/${id}`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__4-jbm\",\"cardTitle\":\"Card_cardTitle__d6oQG\",\"cardBody\":\"Card_cardBody__AWMIx\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__KoSil\",\"cardAction\":\"Card_cardAction__X9Ik5\",\"cardMatchDate\":\"Card_cardMatchDate__ruzTr\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\nconst Card = ({\n  title, action, style, titleStyle, children,\n}) => (\n  <div className={styles.card} style={style}>\n    {title && (\n      <div className={styles.cardTitle} style={titleStyle}>\n        <span>{title}</span>\n        {action && (\n          <div className={styles.cardAction}>{action}</div>\n        )}\n      </div>\n    )}\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\n      {children}\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  titleStyle: PropTypes.object,\n  action: PropTypes.node,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"TournamentsPage_row__gMeMZ\",\"rowTitle\":\"TournamentsPage_rowTitle__0Pxoy\",\"col\":\"TournamentsPage_col__bhdew\",\"colLink\":\"TournamentsPage_colLink__aUyIC\"};","import { Link } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getTournaments } from '../../api/tournaments';\nimport Loading from '../../components/Loading';\nimport styles from './index.module.scss';\nimport { TitleContext } from '../../utils/contexts';\nimport Card from '../../components/Card';\n\nconst TournamentsPage = () => {\n  const { setTitle } = useContext(TitleContext);\n  useEffect(() => {\n    setTitle('Турніри');\n  }, [setTitle]);\n  const [tournaments, setTournaments] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadTournaments = async () => {\n      setLoading(true);\n      try {\n        const res = await getTournaments();\n        if (res.status && res.status === 200) {\n          setTournaments(res.data);\n        }\n      } catch (error) {\n        toast.error(error.response.data.error || error.message, 3000);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTournaments();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <div className={styles.row}>\n        {tournaments.filter(({ archive }) => !archive).map((tournament) => (\n          <div key={tournament.id} className={styles.col}>\n            <Card>\n              <Link to={`/tournament/${tournament.id}-${tournament.slug}`}>\n                <div className={styles.colLink}>{tournament.name}</div>\n                <img style={{ objectFit: 'contain', width: '100%', height: '150px' }} alt={tournament.name} src={tournament.logo} />\n              </Link>\n            </Card>\n          </div>\n        ))}\n      </div>\n      <div className={styles.rowTitle}>Архівні турніри</div>\n      <div className={styles.row}>\n        {tournaments.filter(({ archive }) => archive).map((tournament) => (\n          <div key={tournament.id} className={styles.col}>\n            <Card>\n              <Link to={`/tournament/${tournament.id}-${tournament.slug}`}>\n                <div className={styles.colLink}>{tournament.name}</div>\n                <img style={{ objectFit: 'contain', width: '100%', height: '150px' }} alt={tournament.name} src={tournament.logo} />\n              </Link>\n            </Card>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default TournamentsPage;\n"],"names":["getTournaments","token","getJWToken","axios","process","headers","Authorization","getTournament","id","title","action","style","titleStyle","children","className","styles","cn","setTitle","useContext","TitleContext","useEffect","useState","tournaments","setTournaments","loading","setLoading","loadTournaments","res","status","data","toast","response","error","message","Loading","filter","archive","map","tournament","Card","to","slug","name","objectFit","width","height","alt","src","logo"],"sourceRoot":""}