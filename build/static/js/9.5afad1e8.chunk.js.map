{"version":3,"sources":["components/Card/index.js","components/Card/index.module.scss","api/tournaments.js","views/TournamentsPage/index.module.scss","views/TournamentsPage/index.js"],"names":["Card","title","action","children","className","styles","card","cardTitle","cardAction","cn","cardBody","cardBodyWithoutTitle","module","exports","getTournaments","a","token","getJWToken","axios","get","process","headers","Authorization","getTournament","id","TournamentsPage","setTitle","useContext","TitleContext","useEffect","useState","tournaments","setTournaments","loading","setLoading","loadTournaments","res","status","data","notificationWrapper","row","map","tournament","col","to","slug","style","objectFit","width","height","alt","name","src","logo"],"mappings":"sJA0BeA,IAtBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,SAAlB,OACX,sBAAKC,UAAWC,IAAOC,KAAvB,UACGL,GACC,sBAAKG,UAAWC,IAAOE,UAAvB,UACE,+BAAON,IACNC,GACC,qBAAKE,UAAWC,IAAOG,WAAvB,SAAoCN,OAI1C,qBAAKE,UAAWK,IAAGJ,IAAOK,SAAR,eAAqBL,IAAOM,sBAAwBV,IAAtE,SACGE,S,oBCdPS,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,SAAW,uBAAuB,qBAAuB,mCAAmC,cAAgB,8B,2JCE/KC,EAAc,uCAAG,4BAAAC,EAAA,6DACtBC,EAAQC,cADc,SAEfC,IAAMC,IAAN,UAAaC,4BAAb,gBAA4D,CACvEC,QAAS,CACPC,cAAeN,KAJS,mFAAH,qDASdO,EAAa,uCAAG,WAAOC,GAAP,eAAAT,EAAA,6DACrBC,EAAQC,cADa,SAEdC,IAAMC,IAAN,UAAaC,4BAAb,wBAA4DI,GAAM,CAC7EH,QAAS,CACPC,cAAeN,KAJQ,mFAAH,uD,oBCX1BJ,EAAOC,QAAU,CAAC,IAAM,6BAA6B,IAAM,+B,8JCoD5CY,UA5CS,WACtB,IAAQC,EAAaC,qBAAWC,KAAxBF,SACRG,qBAAU,WACRH,EAAS,gDACR,CAACA,IACJ,MAAsCI,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAL,qBAAU,WACR,IAAMM,EAAe,uCAAG,4BAAApB,EAAA,6DACtBmB,GAAW,GADW,kBAGFpB,cAHE,QAGdsB,EAHc,QAIZC,QAAyB,MAAfD,EAAIC,QACpBL,EAAeI,EAAIE,MALD,gDAQpBC,aAAoB,EAAD,4DARC,yBAUpBL,GAAW,GAVS,4EAAH,qDAarBC,MACC,IAECF,EACK,cAAC,IAAD,IAIP,qBAAK7B,UAAWC,IAAOmC,IAAvB,SACGT,EAAYU,KAAI,SAACC,GAAD,OACf,qBAAyBtC,UAAWC,IAAOsC,IAA3C,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAE,sBAAiBF,EAAWlB,GAA5B,YAAkCkB,EAAWG,MAArD,SACE,qBAAKC,MAAO,CAAEC,UAAW,UAAWC,MAAO,OAAQC,OAAQ,SAAWC,IAAKR,EAAWS,KAAMC,IAAKV,EAAWW,YAHxGX,EAAWlB","file":"static/js/9.5afad1e8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\nconst Card = ({ title, action, children }) => (\n  <div className={styles.card}>\n    {title && (\n      <div className={styles.cardTitle}>\n        <span>{title}</span>\n        {action && (\n          <div className={styles.cardAction}>{action}</div>\n        )}\n      </div>\n    )}\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\n      {children}\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  action: PropTypes.node,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3rpIc\",\"cardTitle\":\"Card_cardTitle__SfE-0\",\"cardBody\":\"Card_cardBody__1Y2cf\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__2utJ9\",\"cardMatchDate\":\"Card_cardMatchDate__3SvHK\"};","import axios from 'axios';\nimport { getJWToken } from '../helpers/authHelper';\n\nexport const getTournaments = async () => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n\nexport const getTournament = async (id) => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments/${id}`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TournamentsPage_row__38uXt\",\"col\":\"TournamentsPage_col__2xlT_\"};","import { Link } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { getTournaments } from '../../api/tournaments';\nimport Loading from '../../components/Loading';\nimport styles from './index.module.scss';\nimport { notificationWrapper } from '../../helpers/notification';\nimport { TitleContext } from '../../utils/contexts';\nimport Card from '../../components/Card';\n\nconst TournamentsPage = () => {\n  const { setTitle } = useContext(TitleContext);\n  useEffect(() => {\n    setTitle('Турніри');\n  }, [setTitle]);\n  const [tournaments, setTournaments] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadTournaments = async () => {\n      setLoading(true);\n      try {\n        const res = await getTournaments();\n        if (res.status && res.status === 200) {\n          setTournaments(res.data);\n        }\n      } catch (error) {\n        notificationWrapper(true, `Помилка ${error}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTournaments();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={styles.row}>\n      {tournaments.map((tournament) => (\n        <div key={tournament.id} className={styles.col}>\n          <Card>\n            <Link to={`/tournament/${tournament.id}-${tournament.slug}`}>\n              <img style={{ objectFit: 'contain', width: '100%', height: '150px' }} alt={tournament.name} src={tournament.logo} />\n            </Link>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TournamentsPage;\n"],"sourceRoot":""}