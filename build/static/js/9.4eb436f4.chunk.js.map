{"version":3,"sources":["components/Card/index.js","components/Card/index.module.scss","api/auth.js","views/ProfilePage/index.module.scss","views/ProfilePage/index.js"],"names":["Card","title","action","children","className","styles","card","cardTitle","cardAction","cn","cardBody","cardBodyWithoutTitle","module","exports","login","a","email","password","axios","method","headers","url","process","data","register","name","getUserDetails","token","getJWToken","get","Authorization","updateUserDetails","ProfilePage","setTitle","useContext","TitleContext","useEffect","Form","useForm","form","loadUserData","res","status","setFieldsValue","notificationWrapper","message","changeProfile","values","row","col","onFinish","layout","requiredMark","colon","Item","label","rules","required","readOnly","Password","type","htmlType"],"mappings":"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","file":"static/js/9.4eb436f4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport styles from './index.module.scss';\r\n\r\nconst Card = ({ title, action, children }) => (\r\n  <div className={styles.card}>\r\n    {title && (\r\n      <div className={styles.cardTitle}>\r\n        <span>{title}</span>\r\n        {action && (\r\n          <div className={styles.cardAction}>{action}</div>\r\n        )}\r\n      </div>\r\n    )}\r\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  action: PropTypes.node,\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2SUbp\",\"cardTitle\":\"Card_cardTitle__3YclI\",\"cardBody\":\"Card_cardBody__1loVX\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__1DM1j\",\"cardMatchDate\":\"Card_cardMatchDate__33GwN\"};","import axios from 'axios';\r\nimport { getJWToken } from '../helpers/authHelper';\r\n\r\nexport const login = async ({ email, password }) => await axios({\r\n  method: 'post',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  url: `${process.env.REACT_APP_LOCAL_API}/users/login`,\r\n  data: { email, password },\r\n});\r\n\r\nexport const register = async ({ email, name, password }) => axios({\r\n  method: 'post',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  url: `${process.env.REACT_APP_LOCAL_API}/users/register`,\r\n  data: { email, name, password },\r\n});\r\n\r\nexport const getUserDetails = async () => {\r\n  const token = getJWToken();\r\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/users/me`, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateUserDetails = async ({ email, name, password }) => {\r\n  const token = getJWToken();\r\n  return await axios({\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: token,\r\n    },\r\n    url: `${process.env.REACT_APP_LOCAL_API}/users/me`,\r\n    data: { email, name, password },\r\n  });\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ProfilePage_row__91pD6\",\"col\":\"ProfilePage_col__XbcHM\"};","import {\r\n  Input, Form, Button, Divider,\r\n} from 'antd';\r\nimport { useContext, useEffect } from 'react';\r\nimport { getUserDetails, updateUserDetails } from '../../api/auth';\r\nimport { TitleContext } from '../../utils/contexts';\r\nimport styles from './index.module.scss';\r\nimport Card from '../../components/Card';\r\nimport { notificationWrapper } from '../../helpers/notification';\r\n\r\nfunction ProfilePage() {\r\n  const { setTitle } = useContext(TitleContext);\r\n  useEffect(() => {\r\n    setTitle('Профіль');\r\n  }, [setTitle]);\r\n\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    const loadUserData = async () => {\r\n      try {\r\n        const res = await getUserDetails();\r\n        if (res.status && res.status === 200) {\r\n          form.setFieldsValue(res.data);\r\n        }\r\n      } catch (error) {\r\n        notificationWrapper(true, error.message);\r\n      }\r\n    };\r\n    loadUserData();\r\n  }, []);\r\n  const changeProfile = async (values) => {\r\n    try {\r\n      const res = await updateUserDetails(values);\r\n      if (res.status && res.status === 201) {\r\n        form.setFieldsValue(res.data);\r\n        notificationWrapper(false, 'Профіль успішно оновлено');\r\n      }\r\n      form.setFieldsValue(res);\r\n    } catch (error) {\r\n      notificationWrapper(true, error.message);\r\n    }\r\n  };\r\n  const onFinish = (values) => {\r\n    changeProfile(values);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.row}>\r\n      <div className={styles.col}>\r\n        <Card title=\"Оновити профіль\">\r\n          <Form\r\n            form={form}\r\n            className=\"sign-in-form\"\r\n            onFinish={onFinish}\r\n            layout=\"vertical\"\r\n            name=\"signin-form\"\r\n            requiredMark={false}\r\n            colon={false}\r\n          >\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[{ required: true, message: 'Введіть ваш email' }]}\r\n            >\r\n              <Input readOnly />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Ім'я\"\r\n              name=\"name\"\r\n              rules={[{ required: true, message: 'Введіть ваше ім\\'я' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Divider />\r\n            <Form.Item\r\n              label=\"Новий пароль\"\r\n              name=\"password1\"\r\n              rules={[{ message: 'Введіть ваш пароль' }]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Повторіть новий пароль\"\r\n              name=\"password2\"\r\n              rules={[{ message: 'Введіть ваш пароль' }]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Змінити\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"sourceRoot":""}