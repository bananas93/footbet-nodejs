{"version":3,"sources":["components/Card/index.js","components/Card/index.module.scss","api/tournaments.js","views/TournamentsPage/index.module.scss","views/TournamentsPage/index.js"],"names":["Card","title","action","children","className","styles","card","cardTitle","cardAction","cn","cardBody","cardBodyWithoutTitle","module","exports","getTournaments","a","token","getJWToken","axios","get","process","headers","Authorization","getTournament","id","TournamentsPage","setTitle","useContext","TitleContext","useEffect","useState","tournaments","setTournaments","loading","setLoading","loadTournaments","res","status","data","notificationWrapper","row","map","tournament","col","to","slug","style","objectFit","width","height","alt","name","src","logo"],"mappings":"wJA0BeA,IAtBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,SAAlB,OACX,sBAAKC,UAAWC,IAAOC,KAAvB,UACGL,GACC,sBAAKG,UAAWC,IAAOE,UAAvB,UACE,+BAAON,IACNC,GACC,qBAAKE,UAAWC,IAAOG,WAAvB,SAAoCN,OAI1C,qBAAKE,UAAWK,IAAGJ,IAAOK,SAAR,eAAqBL,IAAOM,sBAAwBV,IAAtE,SACGE,S,oBCdPS,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,SAAW,uBAAuB,qBAAuB,mCAAmC,cAAgB,8B,2JCE/KC,EAAc,uCAAG,4BAAAC,EAAA,6DACtBC,EAAQC,cADc,SAEfC,IAAMC,IAAN,UAAaC,2BAAb,gBAA4D,CACvEC,QAAS,CACPC,cAAeN,KAJS,mFAAH,qDASdO,EAAa,uCAAG,WAAOC,GAAP,eAAAT,EAAA,6DACrBC,EAAQC,cADa,SAEdC,IAAMC,IAAN,UAAaC,2BAAb,wBAA4DI,GAAM,CAC7EH,QAAS,CACPC,cAAeN,KAJQ,mFAAH,uD,oBCX1BJ,EAAOC,QAAU,CAAC,IAAM,6BAA6B,IAAM,+B,+JCoD5CY,UA5CS,WACtB,IAAQC,EAAaC,qBAAWC,KAAxBF,SACRG,qBAAU,WACRH,EAAS,gDACR,CAACA,IACJ,MAAsCI,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAL,qBAAU,WACR,IAAMM,EAAe,uCAAG,4BAAApB,EAAA,6DACtBmB,GAAW,GADW,kBAGFpB,cAHE,QAGdsB,EAHc,QAIZC,QAAyB,MAAfD,EAAIC,QACpBL,EAAeI,EAAIE,MALD,gDAQpBC,aAAoB,EAAD,4DARC,yBAUpBL,GAAW,GAVS,4EAAH,qDAarBC,MACC,IAECF,EACK,cAAC,IAAD,IAIP,qBAAK7B,UAAWC,IAAOmC,IAAvB,SACGT,EAAYU,KAAI,SAACC,GAAD,OACf,qBAAyBtC,UAAWC,IAAOsC,IAA3C,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAE,sBAAiBF,EAAWlB,GAA5B,YAAkCkB,EAAWG,MAArD,SACE,qBAAKC,MAAO,CAAEC,UAAW,UAAWC,MAAO,OAAQC,OAAQ,SAAWC,IAAKR,EAAWS,KAAMC,IAAKV,EAAWW,YAHxGX,EAAWlB","file":"static/js/10.077e417c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport styles from './index.module.scss';\r\n\r\nconst Card = ({ title, action, children }) => (\r\n  <div className={styles.card}>\r\n    {title && (\r\n      <div className={styles.cardTitle}>\r\n        <span>{title}</span>\r\n        {action && (\r\n          <div className={styles.cardAction}>{action}</div>\r\n        )}\r\n      </div>\r\n    )}\r\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  action: PropTypes.node,\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2SUbp\",\"cardTitle\":\"Card_cardTitle__3YclI\",\"cardBody\":\"Card_cardBody__1loVX\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__1DM1j\",\"cardMatchDate\":\"Card_cardMatchDate__33GwN\"};","import axios from 'axios';\r\nimport { getJWToken } from '../helpers/authHelper';\r\n\r\nexport const getTournaments = async () => {\r\n  const token = getJWToken();\r\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments`, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n};\r\n\r\nexport const getTournament = async (id) => {\r\n  const token = getJWToken();\r\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments/${id}`, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TournamentsPage_row__2TJPg\",\"col\":\"TournamentsPage_col__2DJXR\"};","import { Link } from 'react-router-dom';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { getTournaments } from '../../api/tournaments';\r\nimport Loading from '../../components/Loading';\r\nimport styles from './index.module.scss';\r\nimport { notificationWrapper } from '../../helpers/notification';\r\nimport { TitleContext } from '../../utils/contexts';\r\nimport Card from '../../components/Card';\r\n\r\nconst TournamentsPage = () => {\r\n  const { setTitle } = useContext(TitleContext);\r\n  useEffect(() => {\r\n    setTitle('Турніри');\r\n  }, [setTitle]);\r\n  const [tournaments, setTournaments] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadTournaments = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await getTournaments();\r\n        if (res.status && res.status === 200) {\r\n          setTournaments(res.data);\r\n        }\r\n      } catch (error) {\r\n        notificationWrapper(true, `Помилка ${error}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadTournaments();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.row}>\r\n      {tournaments.map((tournament) => (\r\n        <div key={tournament.id} className={styles.col}>\r\n          <Card>\r\n            <Link to={`/tournament/${tournament.id}-${tournament.slug}`}>\r\n              <img style={{ objectFit: 'contain', width: '100%', height: '150px' }} alt={tournament.name} src={tournament.logo} />\r\n            </Link>\r\n          </Card>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TournamentsPage;\r\n"],"sourceRoot":""}