{"version":3,"sources":["components/Card/index.js","components/Card/index.module.scss","api/auth.js","views/ProfilePage/index.module.scss","views/ProfilePage/index.js"],"names":["Card","title","action","children","className","styles","card","cardTitle","cardAction","cn","cardBody","cardBodyWithoutTitle","module","exports","login","a","email","password","axios","post","process","register","name","method","headers","url","data","getUserDetails","token","getJWToken","get","Authorization","updateUserDetails","ProfilePage","setTitle","useContext","TitleContext","useEffect","Form","useForm","form","loadUserData","res","status","setFieldsValue","notificationWrapper","message","changeProfile","values","password2","row","col","exit","type","onClick","logout","onFinish","layout","requiredMark","colon","autoComplete","Item","label","rules","required","readOnly","hasFeedback","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","htmlType"],"mappings":"sJA0BeA,IAtBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,SAAlB,OACX,sBAAKC,UAAWC,IAAOC,KAAvB,UACGL,GACC,sBAAKG,UAAWC,IAAOE,UAAvB,UACE,+BAAON,IACNC,GACC,qBAAKE,UAAWC,IAAOG,WAAvB,SAAoCN,OAI1C,qBAAKE,UAAWK,IAAGJ,IAAOK,SAAR,eAAqBL,IAAOM,sBAAwBV,IAAtE,SACGE,S,oBCdPS,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,SAAW,uBAAuB,qBAAuB,mCAAmC,cAAgB,8B,+NCE/KC,EAAK,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,SAAqCC,IAAMC,KAAN,UAAcC,4BAAd,gBAA6D,CAAEJ,QAAOC,aAA3G,mFAAH,sDAELI,EAAQ,uCAAG,iCAAAN,EAAA,6DAASC,EAAT,EAASA,MAAOM,EAAhB,EAAgBA,KAAML,EAAtB,EAAsBA,SAAtB,kBAAqCC,IAAM,CACjEK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,IAAI,GAAD,OAAKL,4BAAL,mBACHM,KAAM,CAAEV,QAAOM,OAAML,eANC,2CAAH,sDASRU,EAAc,uCAAG,4BAAAZ,EAAA,6DACtBa,EAAQC,cADc,SAEfX,IAAMY,IAAN,UAAaV,4BAAb,aAAyD,CACpEI,QAAS,CACPO,cAAeH,KAJS,mFAAH,qDASdI,EAAiB,uCAAG,mCAAAjB,EAAA,6DAASC,EAAT,EAASA,MAAOM,EAAhB,EAAgBA,KAAML,EAAtB,EAAsBA,SAC/CW,EAAQC,cADiB,SAElBX,IAAM,CACjBK,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBO,cAAeH,GAEjBH,IAAI,GAAD,OAAKL,4BAAL,aACHM,KAAM,CAAEV,QAAOM,OAAML,cATQ,mFAAH,uD,oBCtB9BL,EAAOC,QAAU,CAAC,IAAM,yBAAyB,IAAM,yBAAyB,KAAO,4B,yLCiIxEoB,UAvHf,WACE,IAAQC,EAAaC,qBAAWC,KAAxBF,SACRG,qBAAU,WACRH,EAAS,gDACR,CAACA,IAEJ,MAAeI,IAAKC,UAAbC,EAAP,oBACAH,qBAAU,WACR,IAAMI,EAAY,uCAAG,4BAAA1B,EAAA,+EAECY,cAFD,QAEXe,EAFW,QAGTC,QAAyB,MAAfD,EAAIC,QACpBH,EAAKI,eAAe,CAClBtB,KAAMoB,EAAIhB,KAAKJ,KACfN,MAAO0B,EAAIhB,KAAKV,QANH,gDAUjB6B,aAAoB,EAAM,KAAMC,SAVf,yDAAH,qDAalBL,MACC,IAEH,IAAMM,EAAa,uCAAG,WAAOC,GAAP,eAAAjC,EAAA,yDAChBiC,EAAO/B,WAAa+B,EAAOC,UADX,uBAElBJ,aAAoB,EAAM,wHAFR,mDAMAb,YAAkBgB,GANlB,QAMZN,EANY,QAOVC,QAAyB,MAAfD,EAAIC,SACpBH,EAAKI,eAAe,CAClBtB,KAAMoB,EAAIhB,KAAKJ,KACfN,MAAO0B,EAAIhB,KAAKV,QAElB6B,aAAoB,EAAO,2IAZX,kDAelBA,aAAoB,EAAM,KAAMC,SAfd,0DAAH,sDAsBnB,OACE,qBAAK1C,UAAWC,IAAO6C,IAAvB,SACE,qBAAK9C,UAAWC,IAAO8C,IAAvB,SACE,cAAC,IAAD,CACElD,MAAM,wFACNC,OACE,wBAAQE,UAAWC,IAAO+C,KAAMC,KAAK,SAASC,QAASC,IAAvD,4CAHJ,SAME,eAAC,IAAD,CACEf,KAAMA,EACNpC,UAAU,eACVoD,SAhBO,SAACR,GAChBD,EAAcC,IAgBNS,OAAO,WACPnC,KAAK,cACLoC,cAAc,EACdC,OAAO,EACPC,aAAa,aARf,UAUE,cAAC,IAAKC,KAAN,CACEC,MAAM,QACNxC,KAAK,QACLyC,MAAO,CAAC,CAAEC,UAAU,EAAMlB,QAAS,wEAHrC,SAKE,cAAC,IAAD,CAAOmB,UAAQ,MAEjB,cAAC,IAAKJ,KAAN,CACEC,MAAM,sBACNxC,KAAK,OACLyC,MAAO,CAAC,CAAEC,UAAU,EAAMlB,QAAS,4FAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAD,IACA,cAAC,IAAKe,KAAN,CACEC,MAAM,sEACNxC,KAAK,WACL4C,aAAW,EACXH,MAAO,CAAC,CAAEjB,QAAS,sIAJrB,SAME,cAAC,IAAMqB,SAAP,MAEF,cAAC,IAAKN,KAAN,CACEC,MAAM,yIACNxC,KAAK,YACL8C,aAAc,CAAC,YACfF,aAAW,EACXH,MAAO,CACL,CAAEjB,QAAS,6JACX,gBAAGuB,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,IAAIC,MAAM,qDAFvBF,QAAQG,cAVzB,SAiBE,cAAC,IAAMT,SAAP,MAEF,cAAC,IAAKN,KAAN,UACE,cAAC,IAAD,CAAQR,KAAK,UAAUwB,SAAS,SAAhC","file":"static/js/8.6218ad95.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\nconst Card = ({ title, action, children }) => (\n  <div className={styles.card}>\n    {title && (\n      <div className={styles.cardTitle}>\n        <span>{title}</span>\n        {action && (\n          <div className={styles.cardAction}>{action}</div>\n        )}\n      </div>\n    )}\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\n      {children}\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  action: PropTypes.node,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3rpIc\",\"cardTitle\":\"Card_cardTitle__SfE-0\",\"cardBody\":\"Card_cardBody__1Y2cf\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__2utJ9\",\"cardMatchDate\":\"Card_cardMatchDate__3SvHK\"};","import axios from 'axios';\nimport { getJWToken } from '../helpers/authHelper';\n\nexport const login = async ({ email, password }) => await axios.post(`${process.env.REACT_APP_LOCAL_API}/users/login`, { email, password });\n\nexport const register = async ({ email, name, password }) => axios({\n  method: 'post',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  url: `${process.env.REACT_APP_LOCAL_API}/users/register`,\n  data: { email, name, password },\n});\n\nexport const getUserDetails = async () => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/users/me`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n\nexport const updateUserDetails = async ({ email, name, password }) => {\n  const token = getJWToken();\n  return await axios({\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token,\n    },\n    url: `${process.env.REACT_APP_LOCAL_API}/users/me`,\n    data: { email, name, password },\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ProfilePage_row__221zm\",\"col\":\"ProfilePage_col__1tMBU\",\"exit\":\"ProfilePage_exit__1XjLo\"};","import {\n  Input, Form, Button, Divider,\n} from 'antd';\nimport { useContext, useEffect } from 'react';\nimport { getUserDetails, updateUserDetails } from '../../api/auth';\nimport { TitleContext } from '../../utils/contexts';\nimport styles from './index.module.scss';\nimport Card from '../../components/Card';\nimport { notificationWrapper } from '../../helpers/notification';\nimport { logout } from '../../helpers/authHelper';\n\nfunction ProfilePage() {\n  const { setTitle } = useContext(TitleContext);\n  useEffect(() => {\n    setTitle('Профіль');\n  }, [setTitle]);\n\n  const [form] = Form.useForm();\n  useEffect(() => {\n    const loadUserData = async () => {\n      try {\n        const res = await getUserDetails();\n        if (res.status && res.status === 200) {\n          form.setFieldsValue({\n            name: res.data.name,\n            email: res.data.email,\n          });\n        }\n      } catch (error) {\n        notificationWrapper(true, error.message);\n      }\n    };\n    loadUserData();\n  }, []);\n\n  const changeProfile = async (values) => {\n    if (values.password !== values.password2) {\n      notificationWrapper(true, 'Пароль не співпадають');\n      return;\n    }\n    try {\n      const res = await updateUserDetails(values);\n      if (res.status && res.status === 201) {\n        form.setFieldsValue({\n          name: res.data.name,\n          email: res.data.email,\n        });\n        notificationWrapper(false, 'Профіль успішно оновлено');\n      }\n    } catch (error) {\n      notificationWrapper(true, error.message);\n    }\n  };\n  const onFinish = (values) => {\n    changeProfile(values);\n  };\n\n  return (\n    <div className={styles.row}>\n      <div className={styles.col}>\n        <Card\n          title=\"Оновити профіль\"\n          action={\n            <button className={styles.exit} type=\"button\" onClick={logout}>Вийти</button>\n          }\n        >\n          <Form\n            form={form}\n            className=\"sign-in-form\"\n            onFinish={onFinish}\n            layout=\"vertical\"\n            name=\"signin-form\"\n            requiredMark={false}\n            colon={false}\n            autoComplete=\"chrome-off\"\n          >\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[{ required: true, message: 'Введіть ваш email' }]}\n            >\n              <Input readOnly />\n            </Form.Item>\n            <Form.Item\n              label=\"Ім'я\"\n              name=\"name\"\n              rules={[{ required: true, message: 'Введіть ваше ім\\'я' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Divider />\n            <Form.Item\n              label=\"Новий пароль\"\n              name=\"password\"\n              hasFeedback\n              rules={[{ message: 'Введіть ваш новий пароль' }]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item\n              label=\"Підтвердіть новий пароль\"\n              name=\"password2\"\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                { message: 'Підтвердіть ваш новий пароль' },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Змінити\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n"],"sourceRoot":""}