{"version":3,"file":"static/js/522.68a652da.chunk.js","mappings":"0NAGaA,EAAc,mCAAG,2FACtBC,GAAQC,EAAAA,EAAAA,MADc,SAEfC,IAAAA,IAAA,UAAaC,4BAAb,gBAA4D,CACvEC,QAAS,CACPC,cAAeL,KAJS,mFAAH,qDASdM,EAAa,mCAAG,WAAOC,GAAP,8EACrBP,GAAQC,EAAAA,EAAAA,MADa,SAEdC,IAAAA,IAAA,UAAaC,4BAAb,wBAA4DI,GAAM,CAC7EH,QAAS,CACPC,cAAeL,KAJQ,mFAAH,uD,sFCX1B,GAAgB,KAAO,mBAAmB,UAAY,wBAAwB,SAAW,uBAAuB,qBAAuB,mCAAmC,cAAgB,6B,SCyB1L,EAtBa,SAAC,GAAD,IAAGQ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,SAAlB,OACX,iBAAKC,UAAWC,EAAAA,KAAhB,UACGJ,IACC,iBAAKG,UAAWC,EAAAA,UAAhB,WACE,0BAAOJ,IACNC,IACC,gBAAKE,UAAWC,EAAAA,WAAhB,SAAoCH,QAI1C,gBAAKE,UAAWE,GAAAA,CAAGD,EAAAA,UAAD,UAAqBA,EAAAA,sBAA+BJ,IAAtE,SACGE,S,qJCdP,EAAsB,6BAAtB,EAAyD,6B,uCCoDzD,EA5CwB,WACtB,IAAQI,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IAAxBF,UACRG,EAAAA,EAAAA,YAAU,WACRH,EAAS,gDACR,CAACA,IACJ,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAL,EAAAA,EAAAA,YAAU,WACR,IAAMM,EAAe,mCAAG,2FACtBD,GAAW,GADW,mBAGFvB,EAAAA,EAAAA,KAHE,QAGdyB,EAHc,QAIZC,QAAyB,MAAfD,EAAIC,QACpBL,EAAeI,EAAIE,MALD,iDAQpBC,EAAAA,EAAAA,IAAoB,EAAD,4DARC,yBAUpBL,GAAW,GAVS,4EAAH,qDAarBC,MACC,IAECF,GACK,SAACO,EAAA,EAAD,KAIP,gBAAKjB,UAAWC,EAAhB,SACGO,EAAYU,KAAI,SAACC,GAAD,OACf,gBAAyBnB,UAAWC,EAApC,UACE,SAACmB,EAAA,EAAD,WACE,SAAC,KAAD,CAAMC,GAAE,sBAAiBF,EAAWvB,GAA5B,YAAkCuB,EAAWG,MAArD,UACE,gBAAKC,MAAO,CAAEC,UAAW,UAAWC,MAAO,OAAQC,OAAQ,SAAWC,IAAKR,EAAWS,KAAMC,IAAKV,EAAWW,YAHxGX,EAAWvB","sources":["api/tournaments.js","webpack://client/./src/components/Card/index.module.scss?78fc","components/Card/index.js","webpack://client/./src/views/TournamentsPage/index.module.scss?c786","views/TournamentsPage/index.js"],"sourcesContent":["import axios from 'axios';\nimport { getJWToken } from '../helpers/authHelper';\n\nexport const getTournaments = async () => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n\nexport const getTournament = async (id) => {\n  const token = getJWToken();\n  return await axios.get(`${process.env.REACT_APP_LOCAL_API}/tournaments/${id}`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__4-jbm\",\"cardTitle\":\"Card_cardTitle__d6oQG\",\"cardBody\":\"Card_cardBody__AWMIx\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__KoSil\",\"cardMatchDate\":\"Card_cardMatchDate__ruzTr\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\nconst Card = ({ title, action, children }) => (\n  <div className={styles.card}>\n    {title && (\n      <div className={styles.cardTitle}>\n        <span>{title}</span>\n        {action && (\n          <div className={styles.cardAction}>{action}</div>\n        )}\n      </div>\n    )}\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\n      {children}\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  action: PropTypes.node,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"TournamentsPage_row__gMeMZ\",\"col\":\"TournamentsPage_col__bhdew\"};","import { Link } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { getTournaments } from '../../api/tournaments';\nimport Loading from '../../components/Loading';\nimport styles from './index.module.scss';\nimport { notificationWrapper } from '../../helpers/notification';\nimport { TitleContext } from '../../utils/contexts';\nimport Card from '../../components/Card';\n\nconst TournamentsPage = () => {\n  const { setTitle } = useContext(TitleContext);\n  useEffect(() => {\n    setTitle('Турніри');\n  }, [setTitle]);\n  const [tournaments, setTournaments] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadTournaments = async () => {\n      setLoading(true);\n      try {\n        const res = await getTournaments();\n        if (res.status && res.status === 200) {\n          setTournaments(res.data);\n        }\n      } catch (error) {\n        notificationWrapper(true, `Помилка ${error}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTournaments();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={styles.row}>\n      {tournaments.map((tournament) => (\n        <div key={tournament.id} className={styles.col}>\n          <Card>\n            <Link to={`/tournament/${tournament.id}-${tournament.slug}`}>\n              <img style={{ objectFit: 'contain', width: '100%', height: '150px' }} alt={tournament.name} src={tournament.logo} />\n            </Link>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TournamentsPage;\n"],"names":["getTournaments","token","getJWToken","axios","process","headers","Authorization","getTournament","id","title","action","children","className","styles","cn","setTitle","useContext","TitleContext","useEffect","useState","tournaments","setTournaments","loading","setLoading","loadTournaments","res","status","data","notificationWrapper","Loading","map","tournament","Card","to","slug","style","objectFit","width","height","alt","name","src","logo"],"sourceRoot":""}